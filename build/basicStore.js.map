{"version":3,"sources":["../basicStore.js"],"names":[],"mappings":";;AAAA,SAAS,UAAT,GAAsB;;AAEpB,MAAI,YAAY,SAAS,SAAT,CAAmB,IAAnB,EAAyB;AACvC,QAAI,OAAO,EAAP,CADmC;AAEvC,SAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,IAAJ,EAAU,GAA1B,EAA+B;AAC7B,WAAK,CAAL,IAAU,EAAV,CAD6B;KAA/B;;AAIA,WAAO;AACL,0BAAK,OAAO;AACV,aAAK,OAAL,CAAa,KAAK,GAAL,EAAb,EADU;AAEV,aAAK,CAAL,IAAU,KAAV,CAFU;OADP;AAKL,kCAAU;AACR,eAAO,KAAK,KAAL,CAAW,CAAX,CAAP,CADQ;OALL;KAAP,CANuC;GAAzB,CAFI;AAkBpB,MAAI,gBAAgB,UAAU,EAAV,CAAhB,CAlBgB;;AAoBpB,SAAO;AACL,gCAAU;AACR,aAAO,cAAc,OAAd,EAAP,CADQ;KADL;AAIL,uBAAI,SAAS;AACX,UAAI,QAAQ,WAAW,EAAX,CADD;AAEX,UAAI,eAAe,UAAU,EAAV,CAAf,CAFO;AAGX,eAAS,aAAT,CAAuB,GAAvB,EAA4B;AAC1B,sBAAc,IAAd,CAAmB,GAAnB,EAD0B;AAE1B,qBAAa,IAAb,CAAkB,GAAlB,EAF0B;OAA5B;AAIA,aAAO;AACL,0BAAI,KAAK;AACP,iBAAO,MAAM,GAAN,CAAP,CADO;SADJ;AAIL,0BAAI,KAAK,OAAO;AACd,gBAAM,GAAN,IAAa,KAAb,CADc;AAEd,wBAAc,GAAd,EAFc;SAJX;AAQL,8BAAO;AACL,iBAAO,OAAO,IAAP,CAAY,KAAZ,CAAP,CADK;SARF;AAWL,gCAAO,KAAK,UAAU;AACpB,mBAAS,MAAM,GAAN,CAAT,EADoB;AAEpB,wBAAc,GAAd,EAFoB;AAGpB,iBAAO,MAAM,GAAN,CAAP,CAHoB;SAXjB;AAgBL,oCAAU;AACR,iBAAO,aAAa,OAAb,EAAP,CADQ;SAhBL;OAAP,CAPW;KAJR;GAAP,CApBoB;CAAtB","file":"basicStore.js","sourcesContent":["function basicStore() {\n\n  let arrayPool = function arrayPool(size) {\n    let pool = [];\n    for (let i = 0; i < size; i++) {\n      pool[i] = '';\n    }\n\n    return {\n      push(value) {\n        pool.unshift(pool.pop());\n        pool[0] = value;\n      },\n      current() {\n        return pool.slice(0);\n      }\n    };\n  }\n  let globalHistory = arrayPool(20);\n\n  return {\n    history() {\n      return globalHistory.current();\n    },\n    new(initial) {\n      let store = initial || {};\n      let localHistory = arrayPool(10);\n      function updateHistory(key) {\n        globalHistory.push(key);\n        localHistory.push(key);\n      }\n      return {\n        get(key) {\n          return store[key];\n        },\n        set(key, value) {\n          store[key] = value;\n          updateHistory(key);\n        },\n        keys() {\n          return Object.keys(store);\n        },\n        update(key, callback) {\n          callback(store[key]);\n          updateHistory(key);\n          return store[key];\n        },\n        history() {\n          return localHistory.current();\n        }\n      }\n    }\n  }\n}\n"]}